@model DemoWeb2.Models.AdminUser

@{
    ViewBag.Title = "Tạo mới nhân viên";
    ViewBag.headTitle = "Tạo mới nhân viên";
    Layout = "~/Views/Shared/_admin_Layout.cshtml";
}


@using (Html.BeginForm("Create", "AdminUsers", FormMethod.Post, new
{
    @enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-12">
                <div class="tile">
                    <h3 class="tile-title">Nhập thông tin nhân viên</h3>
                    <div class="tile-body">

                        <div class="row element-button">
                            <div class="col-sm-2">
                                <a class="btn btn-add btn-sm" href="@Url.Action("Index","Categories")">
                                    <i class="fas fa-folder"></i> Danh sách chức vụ
                                </a>
                            </div>
                        </div>

                        <div class="row">

                            <div class="form-group col-md-4">
                                <label class="control-label">Tên nhân viên </label>
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Số điện thoại</label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Ngày sinh</label>
                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @id = "inputDate" } })
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Email</label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Mật khẩu</label>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Số định danh</label>
                                @Html.EditorFor(model => model.CMT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CMT, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label class="control-label">Chức vụ </label>
                                @Html.DropDownList("Job_title", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Job_title, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-8">
                                <label class="control-label">Địa chỉ</label>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>


                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-add" />
                            @Html.ActionLink("Trở lại", "Index", null, new { @class = "btn btn-app" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<script>
    $(document).ready(function () {
        function formatDate(inputDate) {
            const regex = /\/Date\((\d+)\)\//;
            const match = regex.exec(inputDate);

            if (match && match[1]) {
                const dateInMillis = parseInt(match[1], 10);
                const date = new Date(dateInMillis);

                const day = date.getDate();
                const month = date.getMonth() + 1; // Tháng trong JavaScript đếm từ 0, cộng thêm 1 để đúng định dạng
                const year = date.getFullYear();

                // Hàm padStart sẽ thêm số 0 vào trước nếu ngày hoặc tháng chỉ có một chữ số
                const formattedDay = String(day).padStart(2, '0');
                const formattedMonth = String(month).padStart(2, '0');

                // Xây dựng chuỗi ngày tháng năm mới theo định dạng "dd-MM-yyyy"
                const formattedDate = `${formattedDay}-${formattedMonth}-${year}`;

                return formattedDate;
            } else {
                console.error("Ngày không hợp lệ!");
                return null;
            }
        }
    });
</script>
