@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<DemoWeb2.Models.Product>

@{
    ViewBag.Title = "Trang sản phẩm";
    ViewBag.headTitle = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_admin_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="tile">
            <div class="tile-body">
                <div class="row element-button">
                    <div class="col-sm-2">

                        <a class="btn btn-add btn-sm" href="@Url.Action("Create","Products")">
                            <i class="fas fa-plus"></i>
                            Tạo mới sản phẩm
                        </a>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-6">

                    </div>
                    <div class="col-sm-12 col-md-6">
                        @using (Html.BeginForm("Index", "Products", FormMethod.Get, new { @class = "d-flex justify-content-end" }))
                        {
                            <label class="col-form-label">
                                Tìm kiếm:
                                <div class="input-group input-group-sm">
                                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control ", placeholder = "Nhập tên sản phẩm", value = "Lorem ipsum" })
                                    
                                </div>
                            </label>
                        }
                    </div>
                </div>
                <table class="table table-hover table-bordered" id="sampleTable">
                    <thead>
                        <tr>
                            <th>Mã sản phẩm</th>
                            <th>Tên sản phẩm</th>
                            <th>Ảnh</th>
                            <th>Giá tiền</th>
                            <th>Danh mục</th>
                            <th>Chức năng</th>
                        </tr>
                    </thead>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.ProductID)
                            </td>
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.NamePro)
                            </td>
                            <td>
                                <img src="~/Images/@item.ImagePro" style="width:100px; height:100px" />
                            </td>
                            @*<td class="align-middle">
                        @Html.Raw(item.DecriptionPro.Substring(0, 40))
                        ...
                    </td>*@
                        <td class="align-middle">
                            @string.Format("{0:#,0}", item.Price) đ
                        </td>
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem =>
                               item.Category1.NameCate)
                            </td>
                            <td>

                                <button class="btn btn-primary btn-sm trash" type="button" title="Xóa" id="delete-btn"
                                        onclick="location.href='@Url.Action("Delete", "Products",new { id = item.ProductID })'">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                                <button class="btn btn-primary btn-sm edit" type="button" title="Sửa"
                                        onclick="location.href='@Url.Action("Edit", "Products",new { id = item.ProductID })'">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-primary btn-sm info" type="button" title="Sửa"
                                        onclick="location.href='@Url.Action("Details", "Products",new { id = item.ProductID })'">
                                    <i class="fas fa-info-circle"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </table>
                @*Trang @(Model.PageCount<Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))*@
                @* Tạo liên kết các trang *@

                <div class="MenuTrang pagination">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                      new PagedListRenderOptions()
                      {
                          LiElementClasses = new[] { "paginate_button page-item page-link" },
                          UlElementClasses = new[] { "pagination" }
                      })
                    <span>Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/ @Model.PageCount</span>
                </div>
                <style>
                    .pagination {
                        justify-content: space-between;
                        align-items: center;
                    }

                    .MenuTrang li {
                        display: inline;
                    }

                    .active {
                        background-color: #001C40;
                        color: white;
                    }
                </style>
            </div>
        </div>
    </div>
</div>
